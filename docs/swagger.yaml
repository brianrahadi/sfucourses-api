definitions:
  main.ErrorResponse:
    description: Error information
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  main.HealthResponse:
    description: Health check status information
    properties:
      status:
        example: ok
        type: string
      version:
        example: 1.0.0
        type: string
    type: object
  model.AllCourseOutlinesResponse:
    description: Paginated response containing course outlines
    properties:
      data:
        items:
          $ref: '#/definitions/model.CourseOutline'
        type: array
      next_url:
        example: /v1/rest/outlines?limit=100&offset=50
        type: string
      total_count:
        example: 3412
        type: integer
    type: object
  model.CourseOffering:
    description: Course offering information for a specific term
    properties:
      instructors:
        example:
        - John Doe
        - Jane Smith
        items:
          type: string
        type: array
      term:
        example: Fall 2024
        type: string
    type: object
  model.CourseOutline:
    description: Course outline information including general details and offerings
    properties:
      corequisites:
        example: ""
        type: string
      degreeLevel:
        example: UGRD
        type: string
      deliveryMethod:
        example: In Person
        type: string
      dept:
        example: CMPT
        type: string
      description:
        example: Introduction to a variety of practical and important data structures
          and methods...
        type: string
      designation:
        example: Quantitative
        type: string
      notes:
        example: ""
        type: string
      number:
        example: "225"
        type: string
      offerings:
        items:
          $ref: '#/definitions/model.CourseOffering'
        type: array
      prerequisites:
        example: (MACM 101 and (CMPT 125, CMPT 129 or CMPT 135)) or (ENSC 251 and
          ENSC 252), all with a minimum grade of C-.
        type: string
      title:
        example: Data Structures and Programming
        type: string
      units:
        example: "3"
        type: string
    type: object
  model.CourseWithSectionDetails:
    description: Course with detailed section information
    properties:
      dept:
        example: CMPT
        type: string
      id:
        example: "1234"
        type: string
      number:
        example: "225"
        type: string
      sections:
        items:
          $ref: '#/definitions/model.SectionDetail'
        type: array
      term:
        example: Fall 2024
        type: string
      title:
        example: Data Structure and Algorithms
        type: string
      units:
        example: "3"
        type: string
    type: object
  model.Instructor:
    description: Instructor information
    properties:
      email:
        example: john_doe@sfu.ca
        type: string
      name:
        example: John Doe
        type: string
    type: object
  model.SectionDetail:
    description: Detailed information about a course section
    properties:
      classNumber:
        example: "6327"
        type: string
      deliveryMethod:
        example: In Person
        type: string
      instructors:
        items:
          $ref: '#/definitions/model.Instructor'
        type: array
      schedules:
        items:
          $ref: '#/definitions/model.SectionSchedule'
        type: array
      section:
        example: D100
        type: string
    type: object
  model.SectionSchedule:
    description: Schedule information for a section
    properties:
      campus:
        example: Burnaby
        type: string
      days:
        example: Mo,We,Fr
        type: string
      endDate:
        example: "2024-12-06"
        type: string
      endTime:
        example: "11:20"
        type: string
      sectionCode:
        example: LEC
        type: string
      startDate:
        example: "2024-09-03"
        type: string
      startTime:
        example: "10:30"
        type: string
    type: object
host: api.sfucourses.com
info:
  contact: {}
  description: Unofficial API for accessing SFU course outlines, sections, and instructors
    robustly and used to power [sfucourses.com](https://sfucourses.com). Data is pulled
    from [SFU Course Outlines REST API](https://www.sfu.ca/outlines/help/api.html).
    This API is not affiliated with Simon Fraser University.
  title: SFU Courses API
paths:
  /health:
    get:
      description: Returns status and version information about the API
      produces:
      - application/json
      responses:
        "200":
          description: Returns status and version information
          schema:
            $ref: '#/definitions/main.HealthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Health check endpoint
      tags:
      - Health
  /v1/rest/outlines/{dept}:
    get:
      consumes:
      - application/json
      description: Retrieves all course outlines for a specific department
      parameters:
      - description: Department code (e.g., CMPT, MATH)
        in: path
        name: dept
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of course outlines for the department
          schema:
            items:
              items:
                $ref: '#/definitions/model.CourseOutline'
              type: array
            type: array
        "404":
          description: Department not found or no courses available
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get course outlines by department
      tags:
      - Outlines
  /v1/rest/outlines/{dept}/{number}:
    get:
      consumes:
      - application/json
      description: Retrieves course outline for a specific department and course number
      parameters:
      - description: Department code (e.g., CMPT, MATH)
        in: path
        name: dept
        required: true
        type: string
      - description: Course number (e.g., 120, 225)
        in: path
        name: number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Course outline details
          schema:
            $ref: '#/definitions/model.CourseOutline'
        "404":
          description: Course not found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get specific course outline
      tags:
      - Outlines
  /v1/rest/outlines/all:
    get:
      consumes:
      - application/json
      description: Retrieves a paginated list of all course outlines
      parameters:
      - description: Number of items to return (pagination)
        in: query
        name: limit
        type: integer
      - description: Number of items to skip (pagination offset)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Response for course outlines
          schema:
            $ref: '#/definitions/model.AllCourseOutlinesResponse'
        "404":
          description: No course outlines found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get all course outlines
      tags:
      - Outlines
  /v1/rest/sections/{year-term}:
    get:
      consumes:
      - application/json
      description: Retrieves all course sections for a specific year and term
      parameters:
      - description: Year and term in format YYYY-Term (e.g., 2024-Spring)
        in: path
        name: year-term
        required: true
        type: string
      - description: 'Whether to include course outline data (default: false)'
        in: query
        name: withOutlines
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: List of sections without outlines
          schema:
            items:
              items:
                $ref: '#/definitions/model.CourseWithSectionDetails'
              type: array
            type: array
        "400":
          description: Invalid year-term format or query parameters
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: No sections found for the specified term
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get sections by term
      tags:
      - Sections
  /v1/rest/sections/{year-term}/{dept}:
    get:
      consumes:
      - application/json
      description: Retrieves all course sections for a specific year, term, and department
      parameters:
      - description: Year and term in format YYYY-Term (e.g., 2024-Spring)
        in: path
        name: year-term
        required: true
        type: string
      - description: Department code (e.g., CMPT, MATH)
        in: path
        name: dept
        required: true
        type: string
      - description: 'Whether to include course outline data (default: false)'
        in: query
        name: withOutlines
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: List of sections without outlines
          schema:
            items:
              items:
                $ref: '#/definitions/model.CourseWithSectionDetails'
              type: array
            type: array
        "400":
          description: Invalid year-term format or query parameters
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: No sections found for the specified term and department
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get sections by term and department
      tags:
      - Sections
  /v1/rest/sections/{year-term}/{dept}/{number}:
    get:
      consumes:
      - application/json
      description: Retrieves all course sections for a specific year, term, department,
        and course number
      parameters:
      - description: Year and term in format YYYY-Term (e.g., 2024-Spring)
        in: path
        name: year-term
        required: true
        type: string
      - description: Department code (e.g., CMPT, MATH)
        in: path
        name: dept
        required: true
        type: string
      - description: Course number (e.g., 120, 225)
        in: path
        name: number
        required: true
        type: string
      - description: 'Whether to include course outline data (default: false)'
        in: query
        name: withOutlines
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: List of sections without outlines
          schema:
            items:
              items:
                $ref: '#/definitions/model.CourseWithSectionDetails'
              type: array
            type: array
        "400":
          description: Invalid year-term format or query parameters
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: No sections found for the specified criteria
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get sections by term, department, and course number
      tags:
      - Sections
schemes:
- https
swagger: "2.0"
tags:
- description: Health endpoints for monitoring API status and availability
  name: Health
- description: Outline endpoints for retrieving course outlines, including its offerings
  name: Outlines
- description: Section endpoints for retrieving section info, including its schedules
    and instructor(s)
  name: Sections
