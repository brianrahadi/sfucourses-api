definitions:
  main.ErrorResponse:
    description: Error information
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  main.HealthResponse:
    description: Health check status information
    properties:
      lastDataUpdate:
        example: "2025-06-17T07:40:46Z"
        type: string
      status:
        example: ok
        type: string
      version:
        example: 1.0.0
        type: string
    type: object
  model.CourseOffering:
    description: Course offering information for a specific term
    properties:
      instructors:
        example:
        - John Doe
        - Jane Smith
        items:
          type: string
        type: array
      term:
        example: Fall 2024
        type: string
    type: object
  model.CourseOutline:
    description: Course outline information including general details and offerings
    properties:
      corequisites:
        example: ""
        type: string
      degreeLevel:
        example: UGRD
        type: string
      deliveryMethod:
        example: In Person
        type: string
      dept:
        example: CMPT
        type: string
      description:
        example: Introduction to a variety of practical and important data structures
          and methods...
        type: string
      designation:
        example: Quantitative
        type: string
      notes:
        example: ""
        type: string
      number:
        example: "225"
        type: string
      offerings:
        items:
          $ref: '#/definitions/model.CourseOffering'
        type: array
      prerequisites:
        example: (MACM 101 and (CMPT 125, CMPT 129 or CMPT 135)) or (ENSC 251 and
          ENSC 252), all with a minimum grade of C-.
        type: string
      title:
        example: Data Structures and Programming
        type: string
      units:
        example: "3"
        type: string
    type: object
  model.CourseReviewData:
    description: Course review data aggregated from instructors
    properties:
      course_code:
        example: BUS251
        type: string
      instructors:
        items:
          $ref: '#/definitions/model.InstructorSummary'
        type: array
      total_reviews:
        example: 25
        type: integer
    type: object
  model.CourseWithSectionDetails:
    description: Course with detailed section information
    properties:
      dept:
        example: CMPT
        type: string
      number:
        example: "225"
        type: string
      sections:
        items:
          $ref: '#/definitions/model.SectionDetail'
        type: array
      term:
        example: Fall 2024
        type: string
      title:
        example: Data Structure and Algorithms
        type: string
      units:
        example: "3"
        type: string
    type: object
  model.Instructor:
    description: Instructor information
    properties:
      email:
        example: john_doe@sfu.ca
        type: string
      name:
        example: John Doe
        type: string
    type: object
  model.InstructorOffering:
    description: Instructor offering information
    properties:
      dept:
        example: CMPT
        type: string
      number:
        example: "225"
        type: string
      term:
        example: Fall 2024
        type: string
      title:
        example: Data Structures and Algorithms
        type: string
    type: object
  model.InstructorResponse:
    description: Instructor information
    properties:
      name:
        example: John Doe
        type: string
      offerings:
        items:
          $ref: '#/definitions/model.InstructorOffering'
        type: array
    type: object
  model.InstructorReviewData:
    description: Instructor review data from RateMyProfessors
    properties:
      department:
        example: Accounting department
        type: string
      difficulty_level:
        example: "3.5"
        type: string
      overall_rating:
        example: "4.2"
        type: string
      professor_id:
        example: "2326813"
        type: string
      professor_name:
        example: Angela Lin
        type: string
      reviews:
        items:
          $ref: '#/definitions/model.Review'
        type: array
      total_ratings:
        example: "13"
        type: string
      would_take_again:
        example: "85"
        type: string
    type: object
  model.InstructorSummary:
    description: Summary information for an instructor
    properties:
      avg_difficulty:
        example: 3.5
        type: number
      avg_rating:
        example: 4.2
        type: number
      department:
        example: Accounting
        type: string
      professor_id:
        example: "2326813"
        type: string
      professor_name:
        example: Angela Lin
        type: string
      review_count:
        example: 13
        type: integer
      reviews:
        items:
          $ref: '#/definitions/model.Review'
        type: array
      would_take_again:
        example: 85%
        type: string
    type: object
  model.ProfessorSummary:
    description: Summary review information for a professor from reviews.json
    properties:
      Department:
        example: Gender Studies
        type: string
      Difficulty:
        example: "3.6"
        type: string
      Name:
        example: Carman Fung
        type: string
      Quality:
        example: "3.1"
        type: string
      Ratings:
        example: "14"
        type: string
      URL:
        example: https://www.ratemyprofessors.com/professor/2865715
        type: string
      WouldTakeAgain:
        example: 50%
        type: string
    type: object
  model.Review:
    description: Detailed review information
    properties:
      course_code:
        example: BUS251
        type: string
      date:
        example: Sep 1st, 2020
        type: string
      difficulty:
        example: 3
        type: number
      helpful:
        example: 5
        type: integer
      metadata:
        $ref: '#/definitions/model.ReviewMetadata'
      not_helpful:
        example: 1
        type: integer
      rating:
        example: 4
        type: number
      review_msg:
        example: Great professor!
        type: string
      tags:
        example:
        - clear grading criteria
        - participation matters
        items:
          type: string
        type: array
    type: object
  model.ReviewMetadata:
    description: Review metadata information
    properties:
      Attendance:
        example: Mandatory
        type: string
      For Credit:
        example: "Yes"
        type: string
      Grade:
        example: A
        type: string
      Online Class:
        example: "Yes"
        type: string
      Textbook:
        example: "Yes"
        type: string
      Would Take Again:
        example: "Yes"
        type: string
    type: object
  model.SectionDetail:
    description: Detailed information about a course section
    properties:
      classNumber:
        example: "6327"
        type: string
      deliveryMethod:
        example: In Person
        type: string
      instructors:
        items:
          $ref: '#/definitions/model.Instructor'
        type: array
      schedules:
        items:
          $ref: '#/definitions/model.SectionSchedule'
        type: array
      section:
        example: D100
        type: string
    type: object
  model.SectionSchedule:
    description: Schedule information for a section
    properties:
      campus:
        example: Burnaby
        type: string
      days:
        example: Mo,We,Fr
        type: string
      endDate:
        example: "2024-12-06"
        type: string
      endTime:
        example: "11:20"
        type: string
      sectionCode:
        example: LEC
        type: string
      startDate:
        example: "2024-09-03"
        type: string
      startTime:
        example: "10:30"
        type: string
    type: object
host: api.sfucourses.com
info:
  contact: {}
  description: Unofficial API for accessing SFU course outlines, sections, and instructors
    robustly and used to power [sfucourses.com](https://sfucourses.com). Data is pulled
    from [SFU Course Outlines REST API](https://www.sfu.ca/outlines/help/api.html).
    This API is not affiliated with Simon Fraser University.
  title: sfucourses API
paths:
  /health:
    get:
      description: Returns status and version information about the API
      produces:
      - application/json
      responses:
        "200":
          description: Returns status and version information
          schema:
            $ref: '#/definitions/main.HealthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Health check endpoint
      tags:
      - Health
  /v1/rest/instructors:
    get:
      consumes:
      - application/json
      description: Retrieves instructors with optional filtering by department, course
        number, or name
      parameters:
      - description: Department code (e.g., cmpt, math)
        in: query
        name: dept
        type: string
      - description: Course number (e.g., 120, 225)
        in: query
        name: number
        type: string
      - description: Instructor name (URL encoded)
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of instructors
          schema:
            items:
              $ref: '#/definitions/model.InstructorResponse'
            type: array
        "404":
          description: No instructors found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get instructors
      tags:
      - Instructors
  /v1/rest/outlines:
    get:
      consumes:
      - application/json
      description: Retrieves course outlines, optionally filtered by department and/or
        course number
      parameters:
      - description: Department code (e.g., cmpt, math)
        in: query
        name: dept
        type: string
      - description: Course number (e.g., 120, 225)
        in: query
        name: number
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of course outlines
          schema:
            items:
              $ref: '#/definitions/model.CourseOutline'
            type: array
        "404":
          description: No outlines found for the specified criteria
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get course outlines
      tags:
      - Outlines
  /v1/rest/reviews:
    get:
      consumes:
      - application/json
      description: Returns summary review data for all professors from reviews.json
      produces:
      - application/json
      responses:
        "200":
          description: List of professor summaries
          schema:
            items:
              $ref: '#/definitions/model.ProfessorSummary'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get all reviews overview
      tags:
      - Reviews
  /v1/rest/reviews/courses/{course_code}:
    get:
      consumes:
      - application/json
      description: Retrieves precomputed review data for a specific course code
      parameters:
      - description: Course code (e.g., CMPT353, BUS251)
        in: path
        name: course_code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Course review data
          schema:
            $ref: '#/definitions/model.CourseReviewData'
        "404":
          description: Course not found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get course reviews
      tags:
      - Reviews
  /v1/rest/reviews/instructors/{instructor_name}:
    get:
      consumes:
      - application/json
      description: Retrieves detailed review data for a specific instructor by name
      parameters:
      - description: Instructor name (e.g., Angela_Lin, Angela Lin)
        in: path
        name: instructor_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Instructor review data
          schema:
            $ref: '#/definitions/model.InstructorReviewData'
        "404":
          description: Instructor not found
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get instructor reviews
      tags:
      - Reviews
  /v1/rest/sections:
    get:
      consumes:
      - application/json
      description: Retrieves course sections for a specific year and term, optionally
        filtered by department and/or course number
      parameters:
      - description: Year and term in format YYYY-Term (e.g., 2024-spring)
        in: query
        name: term
        required: true
        type: string
      - description: Department code (e.g., cmpt, math)
        in: query
        name: dept
        type: string
      - description: Course number (e.g., 120, 225)
        in: query
        name: number
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of sections
          schema:
            items:
              items:
                $ref: '#/definitions/model.CourseWithSectionDetails'
              type: array
            type: array
        "400":
          description: Invalid year-term format or query parameters
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "404":
          description: No sections found for the specified criteria
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      summary: Get sections
      tags:
      - Sections
schemes:
- https
swagger: "2.0"
tags:
- description: Health endpoints for monitoring API status and availability
  name: Health
- description: Outline endpoints for retrieving course outlines, including its offerings
  name: Outlines
- description: Section endpoints for retrieving section info, including its schedules
    and instructor(s)
  name: Sections
